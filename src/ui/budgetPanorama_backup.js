import { loadBudgets } from '../services/budgetStorage.js';
import { recomputeBudget } from '../services/budgetCalculations.js';

export function setupBudgetPanorama(ctx = {}) {
  const { isPanoramaEnabled = () => true, getTransactions = () => (window.__gastos?.getTransactions?.() || []), safeFmtCurrency = (v) => String(v), todayISO = () => (window.todayISO ? window.todayISO() : new Date().toISOString().slice(0, 10)), showBudgetHistory = () => {}, updateModalOpenState = () => {} } = ctx;
  ensureStyles();
  const modal = document.createElement('div');
  modal.id = 'panoramaModal';
  modal.className = 'bottom-modal backdrop-blur hidden sheet-modal';
  modal.innerHTML = `<div class="bottom-modal-box"><div class="modal-drag"></div><button class="modal-close-btn" aria-label="Fechar">✕</button><header class="sheet-header"><h2>Panorama</h2></header><div class="modal-content panorama-content"><section class="widget"><div class="bars"><div class="bar income"><span class="label">Entradas</span><span class="value"></span><div class="fill"></div></div><div class="bar expense"><span class="label">Saídas</span><span class="value"></span><div class="fill"></div></div></div></section><section class="budgets"><h4>Orçamentos ativos</h4><div class="budgets__list"></div><p class="empty hidden">Nenhum orçamento ativo.</p></section></div></div>`;
  document.body.appendChild(modal);
  const closeBtn = modal.querySelector('.modal-close-btn');
  const incomeBar = modal.querySelector('.bar.income');
  const expenseBar = modal.querySelector('.bar.expense');
  const budgetsList = modal.querySelector('.budgets__list');
  const emptyEl = modal.querySelector('.budgets .empty');
  closeBtn.onclick = () => hide();
  modal.addEventListener('click', (e) => { if (e.target === modal) hide(); });
  function handleOpen() { if (!isPanoramaEnabled()) return false; render(); modal.classList.remove('hidden'); try{updateModalOpenState();}catch(_){} return true; }
  function hide() { modal.classList.add('hidden'); try{updateModalOpenState();}catch(_){} }
  function render() { const today = todayISO(); const [year, month] = today.split('-'); const txs = getTransactions() || []; const summary = computeMonthlySummary(txs, year, month); setBar(incomeBar, summary.income, summary.max); setBar(expenseBar, summary.expense, summary.max); const budgets = loadBudgets().filter(b=>b&&b.status==='active').map(b=>recomputeBudget({...b}, txs)||b).sort((a,b)=>String(a.endDate||'').localeCompare(String(b.endDate||''))); budgetsList.innerHTML=''; if(!budgets.length){ emptyEl.classList.remove('hidden'); return; } emptyEl.classList.add('hidden'); budgets.forEach(budget=>{ const card=document.createElement('button'); card.type='button'; card.className='budget-card'; const spent=Number(budget.spentValue||0); const total=Number(budget.initialValue||0); const remaining=Math.max(total-spent,0); const ratio= total>0 ? Math.min(1, spent/total) : 0; const start=formatDay(budget.startDate); const end=formatDay(budget.endDate); card.innerHTML=`<div class="row"><span class="tag">${budget.tag||'#tag'}</span><span class="period">${start}–${end}</span></div><div class="row"><span class="spent">Gasto: ${fmt(spent)} / ${fmt(total)}</span><span class="rest">Restante: ${fmt(remaining)}</span></div><div class="progress"><div class="fill" style="width:${ratio*100}%"></div></div>`; card.onclick=()=>{ try{ showBudgetHistory(budget.tag); }catch(_){}}; budgetsList.appendChild(card); }); }
  function setBar(el,value,max){ const val=Number(value||0); const absVal=Math.abs(val); const limit=max>0?Math.min(1,absVal/max):0; let runner=el.querySelector('.fill'); if(!runner){ runner=document.createElement('div'); runner.className='fill'; el.appendChild(runner);} runner.style.width=`${limit*100}%`; const valueEl=el.querySelector('.value'); if(valueEl) valueEl.textContent=fmt(absVal); }
  function computeMonthlySummary(txs,year,month){ const prefix=`${year}-${month}`; let income=0,expense=0; (txs||[]).forEach(tx=>{ if(!tx||tx.planned) return; const iso=(tx.opDate||'').slice(0,7); if(iso!==prefix) return; const v=Number(tx.val)||0; if(v>0) income+=v; else expense+=Math.abs(v); }); const max=Math.max(income,expense,1); return {income,expense,max}; }
  function formatDay(iso){ if(!iso) return ''; try{ const d=new Date(`${iso}T00:00:00`); return d.toLocaleDateString('pt-BR',{day:'2-digit',month:'2-digit'});}catch{ return iso; } }
  const fmt = (v)=>{ try{ return safeFmtCurrency(Number(v)||0);}catch{ return String(v);} };
  return { handleOpen, hide };
}

function ensureStyles(){ if(document.getElementById('panorama-styles')) return; const st=document.createElement('style'); st.id='panorama-styles'; st.textContent=`.panorama-content .widget{border-radius:12px;padding:16px;display:flex;flex-direction:column;gap:12px}.panorama-content .widget .bars{display:flex;gap:16px}.panorama-content .widget .bar{flex:1;border-radius:10px;padding:12px 14px;display:flex;flex-direction:column;gap:8px;position:relative;overflow:hidden}.panorama-content .widget .bar .label{font-size:12px;opacity:.8}.panorama-content .widget .bar .value{font-size:16px;font-weight:600}.panorama-content .widget .bar .fill{position:absolute;left:0;bottom:0;height:4px;background:#5DD39E;border-radius:2px;width:0;transition:width .3s ease}.panorama-content .widget .bar.expense .fill{background:#FF6B6B}.panorama-content .budgets h4{margin:0;font-size:14px;opacity:.8;font-weight:500;text-transform:uppercase;letter-spacing:.06em}.panorama-content .budgets__list{display:flex;flex-direction:column;gap:12px;max-height:46vh;overflow:auto}.panorama-content .budget-card{border:0;border-radius:12px;padding:12px 14px;width:100%;text-align:left;display:flex;flex-direction:column;gap:8px;cursor:pointer}.panorama-content .budget-card .row{display:flex;justify-content:space-between;align-items:center;font-size:13px}.panorama-content .budget-card .progress{height:4px;background:rgba(127,127,127,.2);border-radius:2px;overflow:hidden}.panorama-content .budget-card .progress .fill{height:100%;background:#5DD39E;width:0}.panorama-content .budgets .empty{font-size:13px;text-align:center;margin-top:12px;opacity:.8}.panorama-content .budgets .empty.hidden{display:none}`; document.head.appendChild(st);} 
